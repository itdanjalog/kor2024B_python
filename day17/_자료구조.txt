[ 자료/데이터 ]
    - 컴퓨터가 처리 할 수 있는 문자/숫자/소리/그림 등등 형태로 된 정보
    - 파이썬이 처리 할 수 있는 ( 리터럴 타입 ) 등등 형태로 된 정보(리터럴)
[ 구조 ]
    - 부분이나 요소가 어떤 전체를 이루는 짜임/틀/형태 ( 구조물 )
[ 자료 구조 ]
    - 데이터를 이루는 전체 짜임/틀/형태
    - 결론 : 자료 들을 저장(구조) 하는 방법
    - 목적 : 특정한 기준 으로 자료 들을 정리해 두면 검색,정렬,통계 등등 에서 유용 하다.
    - 사용처
        1. 코딩 테스트(회사 면접)
        2. 회사는 자료들을 저장하는 방법들을 극대화 해서 효율적(돈 아껴쓴다)으로 사용곳
        3. *컴퓨터를 이해하는데 중요한 역할*
    - 대표 : 리스트 , 스택 , 큐 , 트리 , 그래프 , 정렬 등등
    - 우리의 학습 목표 : 파이썬을 이용한 자료 구조를 실습/학습/표현/구현 *기초 문법 필수!

1. 스택
    - 데이터를 저장하는 선형(저장되는 순서규칙) 자료구조
    - 후입선출( 나중에 들어온 값이 먼저 나간다. ) , LIFO( Last in First Out )
    - 생활속 사용처 : 프링글스과자통 , 동전케이스 등등
    - 컴퓨터 사용처 : 뒤로가기 , 재귀 알고리즘 , 프로그래밍 함수 지역변수 등등
    - 형태    : 입구와 출구가 하나로 존재한다.
    - 장점    : 데이터 추가 와 제거가 매우 간단하고 빠르다.
    - 용어
        1. push : 스택구조에 데이터를 추가 하는 연산 용어 , 새로운 데이터는 항상 스택 구조 의 맨위 에 위치 한다.
        2. pop : 스택구조에 데이터를 제거하고 반환하는 용산 용어 , 가장 최근에 추가된 데이터를 제거 한다.
        3. peek : 스택구조의 맨 위에 있는 데이터를 반환 연산 용어 , 제거는 하지 않는다. 스택구조의 최상위 확인용도 이다.
    push        pop
    <입구>      <출구>
    ---->       ---->
        |       |
        |       |   <---- top : 스택구조에 마지막 데이터가 위치한 위치 번호를 기억 하는곳 peek
        |       |
        |_______|
2. 큐
    - 데이터를 저장하는 선형 자료구조
    - 선입선출( 먼저 들어온 값이 먼저 나간다. )  ,  FIFO( First in First Out )
    - 생활속 사용처 : 매장웨이팅 , 지하철 등등
    - 컴퓨터 사용처 : 입출력(프린트) , BFS 알고리즘 , 멀티 스레드(처리) , 대용량 처리를 순서 대로 처리 할때.
    - 형태 : 입구와 출구가 별도로 각 존재한다.
    - 장점 : 입력한 순서대로 저장한다. 단순하다..
    - 용어 :
        1. Enqueue : 큐에 데이터를 추가하는 연산 용어
        2. Dequeue : 큐에 데이터를 제거하고 반환하는 연산 용어
        3. Peek : 큐에 맨 앞에 있는 데이터를 반환 연산 용어 , 제거는 하지 않는다. 큐 구조의 확인 용도이다.
            ----------------------
        Enqueue                 Dequeue(Peek)
        <입구>                    <출구>
        ---->                   ---->
            ----------------------

