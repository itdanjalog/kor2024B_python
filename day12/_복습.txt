1. 예외처리
    - 개발자의 실수나 사용자의 영향의 의해 발생하는 문제
    - 문제(예외) 발생시 다른 흐름으로 제어/반경
    - 어떠한 문제가 발생하더라고 24시간 안전한 프로그램 구축
    - 문제에 대한 예측은 개발자의 경험의 의존한다.
        - IndexError클래스 : 존재하지 않는 인덱스를 사용했을때
        - ZeroDivisionError클래스 : 0 으로 나누기 했을때
        - ValueError클래스 : 타입 관련된 문제가 발생했을때
        - KeyError클래스 : 딕셔너리내 존재하지 않는 key를 사용했을때
        등등
    - 문법
        try :
            예외가 발생 하거나 발생 할것 같은(예측) 코드
        except :
            예외가 발생 했을때 실행되는 코드
        finally :
            예외 발생 여부와 상관없이 실행되는 코드

2. 파일처리
    - 파이썬 외부 파일 읽고 쓰기 # ( txt메모장 , csv , json , excel 등등 )
    - 관련된 메소드
        1. 파일객체 = open( '파일의경로' , '열기모드' , encoding='인코딩종류' ) : 만약에 파일의 경로에 파일이 존재하면 파일객체로 반환 함수
            - 파일의경로 :
                절대경로 : 시스템 전체 경로(고정값)
                    - C:\Users\admin\Documents\hyunsu\kor2024B_python\day11\step1.py
                상대경로 : 현재 파일의 기준점으로 지정한 파일의 경로(상대값)
                    - ./ : 현재 경로
                    - ../ : 상위 경로 1번 이동         (현재코드의 위치기준 day12폴더 기준으로 )  ../day11/step1.py
                    - ../../ : 상위 경로 2번 이동
            - 열기모드 :
                1. w : 쓰기모드
                2. r : 읽기모드
            - 인코딩 종류
                - 대부분은 컴퓨터에서는 영문을 지원하는데 한글을 지원 불가능인 경우 인코딩 해야한다.
                    - utf-8 , cp949 이용한 한글로 인코딩 할수 있다.
        2. 파일 객체 함수
            1. .write()         파일내 데이터 쓰기
            2. .read()          파일내 데이터 전체 읽어서 문자열 반환
            3. .readline()      파일내 데이터 한줄씩 읽어서 문자열 반환
            4. .readlines()     파일내 데이터 한줄씩 읽어서 리스트로 반환
            5. .close()         파일 닫기














