# 외부 CSV 파일 다루기
# 1. https://www.data.go.kr/
# 2. '부평구' 검색
# 3. 인천광역시 부평구_인구 현황 ( 클릭 )
# https://www.data.go.kr/data/3044322/fileData.do
# 4. CSV 인천광역시 부평구_인구 현황  [ 다운로드 ] (클릭)
# 인천광역시 부평구_인구 현황_20240214.csv
# 5. 현재 py파일이 있는 폴더(day12) 로 CSV 파일을 이동

# [1] csv 파일 읽어오기
file = open( '인천광역시 부평구_인구 현황_20240214.csv' , 'r'  ) # csv 파일 경로 : 다운로드 받은 csv 파일명과 확장자를 넣는다.    # 'r' 읽기 모드
# [2] csv 파일내 모든 내용들을 가져온다.                         # .read() 읽어온 파일의 모든 내용을 가져오는 함수
contents = file.read()
# [3] 줄 단위로 구분해서 리스트에 반환 한다.
contentList = contents.split('\n')
# print( contentList )
# [4] 반복문을 이용한 리스트내 요소들을 하나씩 호출해 보기
sum = 0 # 부평구 총 인구수를 저장하는 변수
for row in contentList[ 1 : -2 ] :    # for 반복요소 in 리스트 : # 리스트내 요소 하나씩 반복요소에 대입반복
                    # [ 1 : -2 ] : 첫번째 줄(제목) 제외하고 마지막 2줄 제외
    # print( row )          # 리스트내 요소 하나씩 출력
        # row = "동별,인구수(계),인구수(남),인구수(여),세대수,데이터기준일자"
        # row = "부평1동,35141,16835,18306,16861,2024-02-14"           # , (문자 쉼표 )
    cols = row.split(',')   # 요소의 ,쉼표 기준으로 분해
        # cols = [ 동별 , 인구수(계) , 인구수(남) , 인구수(여) , 세대수 ,  데이터기준일자  ]
        # cols = [ 부평1동 , 35141 , 16835 , 18306 , 16861 , 2024-02-14 ]  # ,( 리스트내 요소 구분 )
    # print( cols )
    # 예시1] 부평구의 모든 동명을 출력하시오.
    #print( cols[0] )
    # 예시2] 부평구의 총 인구수(계) 출력하시오.
    print( cols[1] )        # 숫자 처럼 보이지만 숫자형식의 문자열타입
    sum += int( cols[1] )   # 문자열타입 ---> 정수타입 ( 왜? 더하기 연산을 하기 위해서 ) # int( 문자열 )

print( f'부평구의 총 인구수 : { sum }')















