검색/탐색 : 목록 에서 특정한 값을 찾는 행위
    - 주의 할점 : 정렬이 된 상태 인지 정렬이 안된 상태 인지 확인
    1. 순차 검색 : 목록 에서 순서 대로 저장 되어 있는 자료를 처음 부터 끝까지 순서 대로 검색/탐색 방법
        사용처 : 1. 정렬 없는 상태의 목록 2. 검색 속도 느리다.

    2. 이진/이분 검색 : 목록에서 가운데에 있는 항목을 비교 하여 작으면 왼쪽 , 크면 오른쪽 이진 검색 방법
        사용처 : 1. 정렬 있는 상태의 목록 2. 검색 속도 빠르다.

    3. 이진 트리 검색 : 이진트리( python2 day06)를 이용한 검색 방법

    4. 해싱 검색 : (딕셔너리 python1 day07 ) 키가 있는 위치를 계산하여 바로 값을 찾아가는


선형검색
선형 검색은 리스트나 배열의 첫 번째 요소부터 차례대로 하나씩 값을 비교하면서 원하는 값을 찾는 방법입니다.
정렬 여부와 상관없이 모든 데이터에 사용할 수 있습니다.
-예를 들어, 전화번호부에서 첫 번째부터 차례대로 특정 사람을 찾는 방법입니다.

이진검색
이진 검색은 정렬된 배열에서 중간값을 기준으로 원하는 값이 더 크면 오른쪽, 더 작으면 왼쪽 절반을 탐색하는 방식으로 진행되는 검색 알고리즘입니다.
각 단계에서 탐색 범위를 절반으로 줄여 검색을 수행합니다.
-정렬된 책 목록에서 중간을 기준으로 찾아가며 특정 책을 빠르게 찾는 방식입니다.

해시검색
해시 검색은 데이터를 고유한 해시 값으로 변환해 빠르게 접근할 수 있도록 하는 검색 방법입니다.
해시 테이블을 이용해 데이터와 그에 해당하는 해시 값을 저장하고, 해시 값으로 검색을 수행합니다.
-예를 들어, 도서관에서 책 제목을 해시 함수로 변환해 저장하고 빠르게 검색하는 방식입니다.

이진트리검색
이진 트리 검색은 이진 검색 트리(Binary Search Tree, BST) 구조에서 사용하는 방법으로,
각 노드가 두 개의 자식 노드를 가지며 왼쪽 자식 노드는 부모 노드보다 작고,
오른쪽 자식 노드는 부모 노드보다 큽니다.
- 예를 들어, 트리 구조를 사용해 디렉토리에서 파일을 탐색하는 방법입니다.
